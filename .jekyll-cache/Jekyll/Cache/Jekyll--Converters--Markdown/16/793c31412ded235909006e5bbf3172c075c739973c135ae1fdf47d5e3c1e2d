I"û<p>My software career has often felt like an uphill battle against all the things I donâ€™t know.</p>

<h2 id="getting-the-job-done">Getting the job done</h2>
<p>I became a software engineer after attending <a href="https://www.appacademy.io/">App Academy</a>, a coding bootcamp where I learned just enough about coding in 12 weeks to pass an interview and land a job.</p>

<p>At first when I started working full time, it was easy to ask for help and admit the things I didnâ€™t know. I had never used Go (the coding language that my team worked in), I didnâ€™t know anything about distributed systems, and my grasp on things like networking or databases was hazy at best.</p>

<p>However, after a few months, people started to trust me to get things done, and I became more and more reluctant to ask questions. What if they remembered that I didnâ€™t know anything and I lost the credibility I had earned?</p>

<p>I remember one meeting where I didnâ€™t understand a word people on my team were talking about, and I just sat there and nodded.</p>

<h2 id="pumping-the-brakes">Pumping the brakes</h2>
<p>This situation progressed until I was on the verge of getting my first promotion. I was doing well at my job, but my technical knowledge hadnâ€™t grown much. I was focusing on my pre-existing strengths and avoiding my weaknesses, careful to avoid letting anyone know how much I was winging it.</p>

<p>I had fears of eventually becoming a senior engineer who couldnâ€™t explain something like how HTTP works. (I still donâ€™t entirely know!) And I became increasingly stressed at work, verging on burnout.</p>

<p>Eventually, I realized that I was missing the forest for the trees. I had been focusing on the superficial (getting promoted) instead of substantial (actually become a more skilled and valuable engineer).</p>

<p>I asked my boss not to promote me, and he said yes.</p>

<h2 id="turning-it-around">Turning it around</h2>
<p>After declining the promotion, I felt a ton of relief.</p>

<p>I felt like I had permission to slow down, learn things, and stop muddling through.</p>

<p>Iâ€™d been telling myself for months that Iâ€™d learn more about Go, but I never had the energy to do it when I got home â€“ my boss encouraged me to do it at work.</p>

<p>I started a morning routine of reading about Go (and eventually other topics) for 30 minutes before beginning work for the day. I started asking more questions. I felt like I had time to talk to other people and help them with their projects.</p>

<p>My absolute amount of knowledge hadnâ€™t changed substantially, but my trajectory had.</p>

<p>I went from standing still, to making progress.</p>

<p>Before, each new topic I encountered was a threat, showing me how little I currently knew. Now, each new topic I encountered was an opportunity. I may not have known about it at the moment, but I could learn it eventually.</p>

<h2 id="moving-forward">Moving forward</h2>
<p>This change of perspective was a turning point in my career. It made working in software a lot more fun and has given me the space to indulge my curiousity.</p>

<p>Iâ€™ve made learning a core part of my work as a software engineer, and the way I make decisions about my career.</p>

<p>Iâ€™ll write more about my current approach to learning in future posts. Until then!</p>
:ET